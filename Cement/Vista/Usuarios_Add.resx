<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btngrabar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAACH
        DwAAjA8AAP1SAACBQAAAfXkAAOmLAAA85QAAGcxzPIV3AAAKOWlDQ1BQaG90b3Nob3AgSUNDIHByb2Zp
        bGUAAEjHnZZ3VFTXFofPvXd6oc0wAlKG3rvAANJ7k15FYZgZYCgDDjM0sSGiAhFFRJoiSFDEgNFQJFZE
        sRAUVLAHJAgoMRhFVCxvRtaLrqy89/Ly++Osb+2z97n77L3PWhcAkqcvl5cGSwGQyhPwgzyc6RGRUXTs
        AIABHmCAKQBMVka6X7B7CBDJy82FniFyAl8EAfB6WLwCcNPQM4BOB/+fpFnpfIHomAARm7M5GSwRF4g4
        JUuQLrbPipgalyxmGCVmvihBEcuJOWGRDT77LLKjmNmpPLaIxTmns1PZYu4V8bZMIUfEiK+ICzO5nCwR
        3xKxRoowlSviN+LYVA4zAwAUSWwXcFiJIjYRMYkfEuQi4uUA4EgJX3HcVyzgZAvEl3JJS8/hcxMSBXQd
        li7d1NqaQffkZKVwBALDACYrmcln013SUtOZvBwAFu/8WTLi2tJFRbY0tba0NDQzMv2qUP91829K3NtF
        ehn4uWcQrf+L7a/80hoAYMyJarPziy2uCoDOLQDI3fti0zgAgKSobx3Xv7oPTTwviQJBuo2xcVZWlhGX
        wzISF/QP/U+Hv6GvvmckPu6P8tBdOfFMYYqALq4bKy0lTcinZ6QzWRy64Z+H+B8H/nUeBkGceA6fwxNF
        hImmjMtLELWbx+YKuGk8Opf3n5r4D8P+pMW5FonS+BFQY4yA1HUqQH7tBygKESDR+8Vd/6NvvvgwIH55
        4SqTi3P/7zf9Z8Gl4iWDm/A5ziUohM4S8jMX98TPEqABAUgCKpAHykAd6ABDYAasgC1wBG7AG/iDEBAJ
        VgMWSASpgA+yQB7YBApBMdgJ9oBqUAcaQTNoBcdBJzgFzoNL4Bq4AW6D+2AUTIBnYBa8BgsQBGEhMkSB
        5CEVSBPSh8wgBmQPuUG+UBAUCcVCCRAPEkJ50GaoGCqDqqF6qBn6HjoJnYeuQIPQXWgMmoZ+h97BCEyC
        qbASrAUbwwzYCfaBQ+BVcAK8Bs6FC+AdcCXcAB+FO+Dz8DX4NjwKP4PnEIAQERqiihgiDMQF8UeikHiE
        j6xHipAKpAFpRbqRPuQmMorMIG9RGBQFRUcZomxRnqhQFAu1BrUeVYKqRh1GdaB6UTdRY6hZ1Ec0Ga2I
        1kfboL3QEegEdBa6EF2BbkK3oy+ib6Mn0K8xGAwNo42xwnhiIjFJmLWYEsw+TBvmHGYQM46Zw2Kx8lh9
        rB3WH8vECrCF2CrsUexZ7BB2AvsGR8Sp4Mxw7rgoHA+Xj6vAHcGdwQ3hJnELeCm8Jt4G749n43PwpfhG
        fDf+On4Cv0CQJmgT7AghhCTCJkIloZVwkfCA8JJIJKoRrYmBRC5xI7GSeIx4mThGfEuSIemRXEjRJCFp
        B+kQ6RzpLuklmUzWIjuSo8gC8g5yM/kC+RH5jQRFwkjCS4ItsUGiRqJDYkjiuSReUlPSSXK1ZK5kheQJ
        yeuSM1J4KS0pFymm1HqpGqmTUiNSc9IUaVNpf+lU6RLpI9JXpKdksDJaMm4ybJkCmYMyF2TGKQhFneJC
        YVE2UxopFykTVAxVm+pFTaIWU7+jDlBnZWVkl8mGyWbL1sielh2lITQtmhcthVZKO04bpr1borTEaQln
        yfYlrUuGlszLLZVzlOPIFcm1yd2WeydPl3eTT5bfJd8p/1ABpaCnEKiQpbBf4aLCzFLqUtulrKVFS48v
        vacIK+opBimuVTyo2K84p6Ss5KGUrlSldEFpRpmm7KicpFyufEZ5WoWiYq/CVSlXOavylC5Ld6Kn0Cvp
        vfRZVUVVT1Whar3qgOqCmrZaqFq+WpvaQ3WCOkM9Xr1cvUd9VkNFw08jT6NF454mXpOhmai5V7NPc15L
        Wytca6tWp9aUtpy2l3audov2Ax2yjoPOGp0GnVu6GF2GbrLuPt0berCehV6iXo3edX1Y31Kfq79Pf9AA
        bWBtwDNoMBgxJBk6GWYathiOGdGMfI3yjTqNnhtrGEcZ7zLuM/5oYmGSYtJoct9UxtTbNN+02/R3Mz0z
        llmN2S1zsrm7+QbzLvMXy/SXcZbtX3bHgmLhZ7HVosfig6WVJd+y1XLaSsMq1qrWaoRBZQQwShiXrdHW
        ztYbrE9Zv7WxtBHYHLf5zdbQNtn2iO3Ucu3lnOWNy8ft1OyYdvV2o/Z0+1j7A/ajDqoOTIcGh8eO6o5s
        xybHSSddpySno07PnU2c+c7tzvMuNi7rXM65Iq4erkWuA24ybqFu1W6P3NXcE9xb3Gc9LDzWepzzRHv6
        eO7yHPFS8mJ5NXvNelt5r/Pu9SH5BPtU+zz21fPl+3b7wX7efrv9HqzQXMFb0ekP/L38d/s/DNAOWBPw
        YyAmMCCwJvBJkGlQXlBfMCU4JvhI8OsQ55DSkPuhOqHC0J4wybDosOaw+XDX8LLw0QjjiHUR1yIVIrmR
        XVHYqLCopqi5lW4r96yciLaILoweXqW9KnvVldUKq1NWn46RjGHGnIhFx4bHHol9z/RnNjDn4rziauNm
        WS6svaxnbEd2OXuaY8cp40zG28WXxU8l2CXsTphOdEisSJzhunCruS+SPJPqkuaT/ZMPJX9KCU9pS8Wl
        xqae5Mnwknm9acpp2WmD6frphemja2zW7Fkzy/fhN2VAGasyugRU0c9Uv1BHuEU4lmmfWZP5Jiss60S2
        dDYvuz9HL2d7zmSue+63a1FrWWt78lTzNuWNrXNaV78eWh+3vmeD+oaCDRMbPTYe3kTYlLzpp3yT/LL8
        V5vDN3cXKBVsLBjf4rGlpVCikF84stV2a9021DbutoHt5turtn8sYhddLTYprih+X8IqufqN6TeV33za
        Eb9joNSydP9OzE7ezuFdDrsOl0mX5ZaN7/bb3VFOLy8qf7UnZs+VimUVdXsJe4V7Ryt9K7uqNKp2Vr2v
        Tqy+XeNc01arWLu9dn4fe9/Qfsf9rXVKdcV17w5wD9yp96jvaNBqqDiIOZh58EljWGPft4xvm5sUmoqb
        PhziHRo9HHS4t9mqufmI4pHSFrhF2DJ9NProje9cv+tqNWytb6O1FR8Dx4THnn4f+/3wcZ/jPScYJ1p/
        0Pyhtp3SXtQBdeR0zHYmdo52RXYNnvQ+2dNt293+o9GPh06pnqo5LXu69AzhTMGZT2dzz86dSz83cz7h
        /HhPTM/9CxEXbvUG9g5c9Ll4+ZL7pQt9Tn1nL9tdPnXF5srJq4yrndcsr3X0W/S3/2TxU/uA5UDHdavr
        XTesb3QPLh88M+QwdP6m681Lt7xuXbu94vbgcOjwnZHokdE77DtTd1PuvriXeW/h/sYH6AdFD6UeVjxS
        fNTws+7PbaOWo6fHXMf6Hwc/vj/OGn/2S8Yv7ycKnpCfVEyqTDZPmU2dmnafvvF05dOJZ+nPFmYKf5X+
        tfa5zvMffnP8rX82YnbiBf/Fp99LXsq/PPRq2aueuYC5R69TXy/MF72Rf3P4LeNt37vwd5MLWe+x7ys/
        6H7o/ujz8cGn1E+f/gUDmPP8usTo0wAAAAlwSFlzAAALEwAACxMBAJqcGAAADDNJREFUaEPVmHlwVuUV
        xq+o1VoIi1VBkkASshCyELIRSEL2fQ87AspOQBarre0gyoh+zliqn52ptaN1CkgBUZBFpbJUqCC4oEBA
        DVpZBLQjCAiYPzqnz3Pufb/c5EZoM9M/YOY39+O773vOec457/LFEpFrmna/vJZo98triXa/vJYIfPj+
        wvcBLl28ZJ08edL6y4t/vmHhgt8UVVeUPTRp4oTH1q1du3jdunWL1+L5/2D9+vWLly1dunhEXc1j1eVl
        jzwwf171iuXLbtm7Z4919sxZ69x356zvzn6neAQwaEPzD83W6VOnrcWLHsmYfPeEl6ZPmXz44QULPt++
        bVvT9u3bm/T5f+Dtt99u2rhxY9P98+cdaZg+7dNJE8avXfTwQ6V7du/W4K8o4PTJUwHOnT1nPffsH2pr
        Kyu+nTOrQaZNvkceuG++bN26VbZt26bPjvL37dtl586dAXbs2CHbXO/Wv7ZOZkydLNOnTJJ5s2fJ8Jrq
        y4sWPtTAzrhw/oJ1/tx5xSNg34cfKAcP7Lc2vPZacGlh/uejhtdJYe4wGTY0Q0YNr5cN69fLxg0b9NkR
        Nm3cKKtXrZKnlvxWnv7dElny5JPyx2efDdh8fdMmWb5sqRQX5EledqbkD8uWkfW1UpKfe+aVl19O/PzI
        EetQY6PiEfDiC88rLy1baj34wP13Z2ekw0CWFOXlSH5Ottw1ZpRsfvNN+dvmzfrsCGgT+fWvfikVJcWa
        kLrqKqmpLJeVf10hW7dskS1g9aqVUl5SJEX5ueo7DzHkZg2VEbU1CxumT7XQzopHwF2jRyoTxo6xairK
        FjPrBQhcBSAT48eM1lIzCD47wj/QMr+YN1cqy0pUABarfl6xfLnsRCthDcira9ZIeTEE5NkCGENedha7
        4PdZGemWwSNgzIh6ZdyoEVZVWekTOZlDXAKyZPzY0bIDDuiIz47w7u7dct/cuVKCFqmpKJfq8lIpKyyQ
        1StXyu5du2TXO+/I+nXrIKBQ/QYEDMtkFfzAMngFjByujEMVYNhHAWwdrgH2IyqjDoyjjvDB++/LvHtn
        a0uUFRVASL4UoLprVq+W9997T7Bd6jopgwD6JYyB/hGPH1gGr4BWFSjxsYWY+QIKgEMKeG/vXnXEZ0fY
        //HHMmfWTBmSlqK2GVj2kMHy6itr5OOPPpJ9H34om994Q8UxePrmuNys/0LAaARPxrYVgAzkZtoC6OCj
        ffv02REOHzoks2ZMl+TEOMnKSJPMwamSnpwkOCClsbFRDuzfL1veektKIYB+7f7X9uEa8APL4BUwHALA
        2JEjrMrSEh8zY29lWVQvE8aNkYNw0HjwoBw8cKBDHGlq0j0+PiZS0gYlSmpSggyKj5UN2PubPvtMPjl8
        WM8CbOHwm21n326fqwvAnq9wHVSUFvuw0lU5FxAmaAWYwU8/+UQddYSjX34pUyfdLZF9QyVxQIwkxEbJ
        gKgI2YRz4J9ffCFHjhzBTrVDFzmT5yxeFYCE+oFl8Aqor1W4DipKinyZg9N0ounTiePGShMyiMNEM9kR
        Tn71le5mt3cPkvCQOyUsuJf0vv1WeX3jBjlx/LgKfHf3LhxceXby7N7XBCKh/ituoyPra5TRI+qs8pLC
        gAAaYjXG4yCjg2NHj+qzI3x9+rS8+Pzzas+2mybjRo+Qw42H5MSxYypw7553dQHn4L0r+xwLAWkI3sYj
        ACedMqq+ziorKvQNTU9V5SRnqH0mcBs88+238tWJEx2CWf7XN99ooCeOH5PjCPqbr7+WUydP6rsL58/L
        Ky+v1l2KwdN39hDNvmSmp/qBZWhHQLXCNsI25qMRKqcR7kL8/5zZDXL61Cm5fOmS4HIFLnSISxcvBrj4
        PeyAHy5flkONB2VkXS12J7v6tgBkH/8fmp7iB5bBI2B4TZUysq7Gwi7gy0hN1hIHRCAj/I5Xihf+9Jys
        wv1l5YqXHFbIKoLv3Kx2aPs9x3KOmc/vnnn6KanCyczKt2TfDh4ZRwKT/cAyeATUV1cqrAJ2Ad/glEE6
        0S2CWclMT9O9m2KGpKbAcKo6ZdayBqdrubMy2LPtgXcYw7Gcw7m0QV+0mY0xrTLPs0LHpcDfID+wDB4B
        dVUVCqtQnJ/ro8GhmMiA6dQtghnSbY7nRI592BXm2Ec/MfeYtpj3HMs5nGvsmAXbknn2PYRq8MkQmeQH
        lsEjoLaqXKmvqbTgzMeDZgizrCJYCa+IgBAcOObUtrGvAa1wgtbAMZZzTOCe4O1F62SewbNCA/3AMngE
        4AqtsArIki91YIJO1FaBoUCbuIS0K0YFtYgKBMvvnPdtg24VeKC9WgWPUzvRDyyDR0BVRalSgyrgBuhL
        TozXvkS5HBHJLhFcF14hbjE/hhnnDpy2tN8DwSebttHg2Q0pAxP8wDJ4BZSVKKxC/rBM36CEOJ1IAwER
        JN1djZaKuMUY2gZrMOM5t1XgsE0fbYPnnSklMd4PLINHQGVpsYLfAvzB4EuKi6Vqlg5GBjrVsFsqAxlq
        aavWYmzsAN0EdiFX0JxrZxztEsi6vSPRJ30zBgQsgxIG+IFl8AjA/UdhFZA138AB/XHtjW8RkQQRMMrM
        tKwNR4gR41TmimAMx3IO57a0yyC1TR/0ZYJnDOyGpPhYP7AMHgH4GaewCiizLzE2BlfdAZKMySkD47WM
        LdWAkEBFHDEuQXabtUbbwwnYtAnnauCwZbeLHbi2DHzSN2NgNyChfmAZPAJKi/IVXORwXU33xfeP0olJ
        MICSwRiqgWwEhABmq0WMLahFlBfzXsc6QdsZZ9CBXldf9EnfdvC8ekf7gWXwCCgpzFPKiguszIw0X1x0
        JFUrKJlmgqXkryltK22tBHXOhaaVcQSxh3XNOJj/BwJW7CRoQtjn2i7IuMk6fBr/7AYk1A8sg0cATl8F
        9yBcllJ9/KEBpTpZRbAagJlRIWwtZ43Y68SujEGFuXC/00w78+yMO4Ez644fE3hC/2j8gouSuJhIP7AM
        HgE4fRXcg3BZSvH17xeuP/042Qjhr6iBcY4Yp7Xs9qIgu8UCoIdb4XrHsXbQ9vxAq8A2fWjg8EnfjCEu
        uh9/ufmBZfAIwOmrsApYYL6YiDCdyFZSEVgTzIZdEVdVUGoV40YFtca0hkGD5lwn27RpMk5fmnX4jotC
        8JER0j8y3A8sg0cA7igKq4CF5osK7yOxkeFKdHhfiYnoq79fubjVibsqGgCgoKvAMWa8O9vaKrA9AEmj
        r2j4ZxfEMng8kVA/sAweAXnZQ5WCnCwLi8wX2TdEomGIRvnnv7rqSuwkySoIPailtStjOw8IMjjBeT4D
        E7AGbdoE0DYXdG1VheBGoBWiEEeQH1gGjwBcuiAgU/9sh559vF+fYKEIGpw+ZbI0TJ+mf6+hwQEsq9Ne
        dovZYijWrlD7mPeBoJ35tEWbtJ2TNURmwteMaVP10GMc/D4itPczYcF3Wvi/FdknxCtg2uR7rHsbZliP
        P7rIGl5bNTuk522YHKIOcTZoFXgQuVuL5VUxAUEGO6Ot0GDt9yZgQhvGHm1zZ8JhKhWAFYiAAP4FA2vk
        iaLcbAvbcPtXiW5BQVaf0FDrnokTLf9TS+Iw6Ux4SG+tAo27e5NPLvKYfmHan1hUgSBsEBTWSytcgRLO
        0d6GDbXl2Gbbcq3FRoWr74jQYAnpdVvzo48szJ8yaZL18x49rJtvuskrwP2vT0gwz4IHw4J7/Ts8tDfL
        p9BgVFgogCPHmS3GgcGoqPYx791zaIO2aJO27aB7C/2Svr178m+zzyQnJV3nhGd1Ah4B1+NL0An8FB+7
        oSJ3REeELYDBJrTS5X59Q5rxuRlObML7NMNxM4JooV9YMwK9IhzjnkMbtGXs0gd9odd/wOej2AGf7NXz
        jlDE1JWxOTG2K+A6cAPoBsIwJvaGTp1iegQF5d3ateukbp07z+zWpXND9y6dZ4N7HeaAud2DOs/rHtSl
        LfPb0OY95nCubcPYm00fYGaPoC5Tbu3WtfjGTp36I5YYxuTExhiva0+AqcBNgGpvA71Qt54Od4JgEAr6
        gnAQAfqBSIdoFzFtcL8z4zmXNmiLNmmbPujrDtAT7dLLiYUxMbYfrYAbVoNw8PWAqsmN4CeAhm52YFlv
        cfiZi85tcL8z4znX2KFN2qYP44++GYOJJxDj1QR0FOPoarQ393/CI+Bapd0vrx3E+g8yr9TvStUVkAAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>